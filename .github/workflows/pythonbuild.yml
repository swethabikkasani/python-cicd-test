---
name: Python package
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
permissions:
  contents: read
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Python 3.9
        uses: actions/setup-python@v4
        with:
          python-version: "3.9"
          
      - name: DisplayPythonversion
        run: python -c "import sys; print(sys.version)"
        
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install build setuptools wheel pipenv
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          
      - name: Lint with Ruff
        run: |
          pip install ruff
          ruff --format=github --target-version=py39 .
        continue-on-error: true
        
      - name: Build package
        run: |
          pipenv lock
          python3 setup.py bdist_wheel
          ls -la
          
      - uses: jfrog/setup-jfrog-cli@v3
        env:
          JF_URL: ${{ secrets.JF_URL }}
          JF_ACCESS_TOKEN: ${{ secrets.JF_ACCESS_TOKEN }}   
          
      # Run --version
      - name: Check versions
        run: jf --version && jfrog --version
        
      # This command adds a new server configuration to the JFrog CLI   
      - run: |
         export SERVER_ID="test"
         jf c add $SERVER_ID --url=$JF_URL --access-token=$JF_ACCESS_TOKEN --interactive=false
         
      # This action creates a new test file and uploads it to Artifactory   
      - name: Push Build to Artifactory
        run: |
             jf rt upload --flat=true '${{ github.workspace }}/dist/*.whl' apcdl-pypi-local/pybuilds/ 
             
      - name: Sleep for 10 seconds
        run: sleep 10s
        shell: bash

      # This action publishes the build information to Artifactory and deletes older builds
      - name: Build to Artifactory
        run: |
             jf rt build-publish $BUILD_NAME $BUILD_NUMBER
           
      
           
     
           
             
