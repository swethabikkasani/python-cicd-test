---
name: Python package
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
    paths-ignore:
      - '.github/**/*.yml'
      - '.gitignore'
      
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0 # Required due to the way Git works, without it this action won't be able to find any or the correct tags
      
      - name: Set up Python 3.9
        uses: actions/setup-python@v4
        with:
          python-version: "3.9"
          
      - name: DisplayPythonversion
        run: python -c "import sys; print(sys.version)"
        
     # - name: Install dependencies
     #   run: |
     #     python -m pip install --upgrade pip
     #     pip install build setuptools wheel pipenv
     #     if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          
     # - name: Lint with Ruff
     #   run: |
     #     pip install ruff
     #     ruff --format=github --target-version=py39 .
     #   continue-on-error: true
     
      - name: 'Get Previous tag'
        id: previoustag
        uses: "WyriHaximus/github-action-get-previous-tag@v1"
        with:
          fallback: 0.0.0 # Optional fallback tag to use when no tag can be found
        
      - name: 'Get next minor version'
        id: semvers-minor
        run: |
             ls -la
             chmod +x increment_version.sh
             ./increment_version.sh -m ${{ steps.previoustag.outputs.tag }}
          
        #uses: "WyriHaximus/github-action-next-semvers@v1"
        #with:
        #  version: ${{ steps.previoustag.outputs.tag }} 
     
      #- name: Bump version and push tag
      # uses: anothrNick/github-tag-action@1.64.0 # Don't use @master or @v1 unless you're happy to test the latest version
      # env:
      #    GITHUB_TOKEN: ${{ secrets.MY_GITHUB_TOKEN }} # if you don't want to set write permissions use a PAT token
      #    WITH_V: false
        
      #- name: Bump version and push tag
      #  id: tag_version
      #  uses: mathieudutour/github-tag-action@v6.1
      #  with:
      #    github_token: ${{ secrets.MY_GITHUB_TOKEN }}
          
      #- name: Create a GitHub release
      #  uses: ncipollo/release-action@v1
      #  with:
      #    tag: ${{ steps.tag_version.outputs.new_tag }}
      #    name: Release ${{ steps.tag_version.outputs.new_tag }}
      #    body: ${{ steps.tag_version.outputs.changelog }}
        
      #- name: Build package
      #  run: |
      #    rm -rf dist/*.whl
      #    pipenv lock
      #    python3 setup.py bdist_wheel
      #    ls -la
          
      #- uses: jfrog/setup-jfrog-cli@v3
      #  env:
      #    JF_URL: ${{ secrets.JF_URL }}
      #    JF_ACCESS_TOKEN: ${{ secrets.JF_ACCESS_TOKEN }}   
          
      # Run --version
      #- name: Check versions
      #  run: jf --version && jfrog --version
        
      # This command adds a new server configuration to the JFrog CLI   
      #- run: |
      #   export SERVER_ID="test"
      #   jf c add $SERVER_ID --url=$JF_URL --access-token=$JF_ACCESS_TOKEN --interactive=false
                     
        
      #- name: Set Current Date as Env Variable
      #  id: setdate
      #  run: |
      #       echo "NOW=$(date +'%Y%m%dT%H%M%S')" >> $GITHUB_ENV
      #       echo $NOW

         
       # This action creates a new test file and uploads it to Artifactory   
     # - name: Push Build to Artifactory
     #   run: |
      #       mv '${{ github.workspace }}/dist/src_spark_app-0.0.1-py3-none-any.whl' '${{ github.workspace }}/dist/src_spark_app-${{ env.NOW }}.whl'
       #      ls -la dist/
        #     jf rt upload --flat=true '${{ github.workspace }}/dist/*.whl' apcdl-pypi-local/ 
 
             
             
              
      
           
     
           
             
