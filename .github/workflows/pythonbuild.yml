---
name: Python package
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Python 3.9
        uses: actions/setup-python@v4
        with:
          python-version: "3.9"
          
      - name: DisplayPythonversion
        run: python -c "import sys; print(sys.version)"
        
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install build setuptools wheel pipenv
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          
     # - name: Lint with Ruff
     #   run: |
     #     pip install ruff
     #     ruff --format=github --target-version=py39 .
     #   continue-on-error: true
        
      - name: Cache setup.py
        id: cache-setup
        uses: actions/cache@v3
        env:
          cache-name: cache-setup-file
        with:
          path: '${{ github.workspace }}/setup.py'
          key: ${{ runner.os }}-build-${{ env.cache-name }}
          restore-keys: |
            ${{ runner.os }}-build-cache
            ${{ runner.os }}-build-
            ${{ runner.os }}-
            
      - if: ${{ steps.cache-setup.outputs.cache-hit == 'true' }}
        name: Setup.py from Cache
        continue-on-error: true
        run: echo "Setup.py cache file found"
        
      #- name: Build package
      #  run: |
      #    rm -rf dist/*.whl
      #    pipenv lock
      #    python3 setup.py bdist_wheel
      #    ls -la
          
      - uses: jfrog/setup-jfrog-cli@v3
        env:
          JF_URL: ${{ secrets.JF_URL }}
          JF_ACCESS_TOKEN: ${{ secrets.JF_ACCESS_TOKEN }}   
          
      # Run --version
      - name: Check versions
        run: jf --version && jfrog --version
        
      # This command adds a new server configuration to the JFrog CLI   
      - run: |
         export SERVER_ID="test"
         jf c add $SERVER_ID --url=$JF_URL --access-token=$JF_ACCESS_TOKEN --interactive=false
                     
        
      - name: Set Current Date as Env Variable
        id: setdate
        run: |
             echo "NOW=$(date +'%Y%m%dT%H%M%S')" >> $GITHUB_ENV
             echo $NOW

         
       # This action creates a new test file and uploads it to Artifactory   
     # - name: Push Build to Artifactory
     #   run: |
      #       mv '${{ github.workspace }}/dist/src_spark_app-0.0.1-py3-none-any.whl' '${{ github.workspace }}/dist/src_spark_app-${{ env.NOW }}.whl'
       #      ls -la dist/
        #     jf rt upload --flat=true '${{ github.workspace }}/dist/*.whl' apcdl-pypi-local/ 
 
             
             
              
      
           
     
           
             
